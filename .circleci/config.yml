version: 2.1

orbs:
  gh-pages: sugarshin/gh-pages@0.0.6

references:
  workspace_root: &workspace_root ~/workspace
  NODE_MODULES_CACHE_KEY: &NODE_MODULES_CACHE_KEY v1-dependencies-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}-{{ checksum "package-lock.json" }}-node-modules

executors:
  nodejs:
    working_directory: *workspace_root
    docker:
      - image: cimg/node:22.4.1

commands:
  restore_npm_cache:
    steps:
      - restore_cache:
          name: Restore npm cache
          keys:
            - v1-npm-cache-{{ checksum "package-lock.json" }}
            - v1-npm-cache-
  save_npm_cache:
    steps:
      - save_cache:
          name: Save npm cache
          key: v1-npm-cache-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
  restore_node_modules:
    steps:
      - restore_cache:
          name: Restore node_modules
          keys:
            - *NODE_MODULES_CACHE_KEY
  save_node_modules:
    steps:
      - save_cache:
          name: Save node_modules
          key: *NODE_MODULES_CACHE_KEY
          paths:
            - node_modules
  add_npmrc:
    steps:
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" >> ~/.npmrc

jobs:
  test:
    executor:
      name: nodejs
    steps:
      - checkout
      - restore_npm_cache
      - run: npm ci
      - save_npm_cache
      - save_node_modules
      - run:
          name: Lint
          command: |
            npm run lint:eslint
            npm run lint:prettier
      - run:
          name: Typecheck
          command: npm run typecheck
      - run:
          name: Test
          command: npm test

  build:
    executor:
      name: nodejs
    steps:
      - checkout
      - restore_node_modules
      - run:
          name: Compile
          command: npm run compile
          environment:
            NODE_ENV: production
      - store_artifacts:
          path: lib
      - store_artifacts:
          path: es
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - lib
            - es

  build_demo:
    executor:
      name: nodejs
    steps:
      - checkout
      - restore_node_modules
      - run:
          name: Build Demo
          command: npm run build:demo
          environment:
            NODE_ENV: production
      - store_artifacts:
          path: build
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build

  publish:
    executor:
      name: nodejs
    steps:
      - checkout
      - attach_workspace:
          at: *workspace_root
      - add_ssh_keys:
          fingerprints:
            - 'e4:52:fe:79:78:b0:cc:37:b6:3a:dd:71:8b:ca:49:9c'
      - add_npmrc
      - run:
          name: Publish package to npm and tagging
          command: /bin/bash .circleci/publish_and_tagging.sh

workflows:
  test_build_deploy_publish:
    jobs:
      - test
      - build:
          requires:
            - test
      - build_demo:
          requires:
            - test
      - gh-pages/deploy:
          executor:
            name: nodejs
          build-dir: build
          workspace-root: *workspace_root
          ssh-fingerprints: 'e4:52:fe:79:78:b0:cc:37:b6:3a:dd:71:8b:ca:49:9c'
          git-user: CircleCI
          git-email: s+circleci@sugarshin.net
          requires:
            - build_demo
          filters:
            branches:
              only: master
      - publish:
          requires:
            - build
          filters:
            branches:
              only: master
