version: 2.1

references:
  workspace_root: &workspace_root
      ~/workspace

executors:
  nodejs:
    working_directory: *workspace_root
    docker:
      - image: circleci/node:10.15.3

commands:
  restore_deps:
    steps:
      - restore_cache:
          name: Restore Cache - Dependency Modules
          keys:
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            - v1-npm-deps-
  save_deps:
    steps:
      - save_cache:
          name: Save Cache - Dependency Modules
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  add_npmrc:
    steps:
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" >> ~/.npmrc
  configure_git:
    steps:
      - run:
          name: Configure Git
          command: |
            git config --global user.name 'CircleCI'
            git config --global user.email 's+circleci@sugarshin.net'

jobs:
  test:
    executor:
      name: nodejs
    steps:
      - checkout
      - restore_deps
      - run: npm install
      - save_deps
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Test
          command: npm test

  build:
    executor:
      name: nodejs
    steps:
      - checkout
      - restore_deps
      - run: npm install
      - save_deps
      - run: NODE_ENV=production npm run compile
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - lib
            - es

  deploy_demo:
    executor:
      name: nodejs
    steps:
      - checkout
      - restore_deps
      - run: npm install
      - save_deps
      - configure_git
      - run: /bin/bash .circleci/publish-demo.sh

  publish:
    executor:
      name: nodejs
    steps:
      - checkout
      - attach_workspace:
          at: *workspace_root
      - add_npmrc
      - run:
          name: Publish package to npm and tagging
          command: /bin/bash .circleci/publish-and-tagging.sh

workflows:
  test_build_deploy_publish:
    jobs:
      - test
      - build
      - deploy_demo:
          requires:
            - test
            - build
          filters:
            branches:
              only: master
      - publish:
          requires:
            - test
            - build
          filters:
            branches:
              only: master
